{"version":3,"sources":["components/header/index.js","components/header/header.js","services/swapi-service.js","components/loader/index.js","components/loader/loader.js","components/error-indocator/error-indicator.js","components/error-indocator/index.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/intem-list.js","components/item-list/index.js","components/hoc-helpers/with-data.js","components/swapi-service-context/swapi-service-context.js","components/hoc-helpers/with-swapi-service.js","components/hoc-helpers/compose.js","components/hoc-helpers/with-child-function.js","components/sw-components/item-lists.js","components/item-details/item-details.js","components/item-details/item-record.js","components/item-details/index.js","components/sw-components/person-details.js","components/sw-components/planet-details.js","components/sw-components/starship-details.js","components/html/row/index.js","components/html/row/row.js","components/pages/people/index.js","components/pages/people/people.js","components/pages/starships/index.js","components/pages/starships/starships.js","components/pages/planets/index.js","components/pages/planets/planets.js","components/pages/login-page/index.js","components/pages/login-page/login-page.js","components/pages/secret-page/index.js","components/pages/secret-page/secret-page.js","components/pages/error404/index.js","components/pages/error404/error404.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","to","SwapiServise","_apiBase","_imageBase","getResource","url","a","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","getPersonImage","getPlanetImage","getStarshipImage","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passangers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color","item","match","Loader","ErrorIndicator","ErrorIndicatro","RandomPlanet","SwapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","updateInterval","this","props","interval","setInterval","clearInterval","dataOrError","content","Component","defaultProps","PlanetViev","diametr","Fragment","alt","src","ItemList","data","onItemSelected","renderLabel","children","items","label","key","onClick","withData","View","getData","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","swapiServise","serviceProps","compose","funcs","comp","reduceRight","prevResult","f","withChildFunction","fn","renderName","PersonList","swapiService","PlanetList","StarshipList","ItemDetails","image","updateItem","itemId","getImageUrl","pervProps","Children","child","cloneElement","Record","field","Row","left","right","PeoplePage","withRouter","history","params","push","StarshipPage","PlanetPage","LoginPage","isLoggedIn","onLogin","SecretPage","Error404","App","selectedPerson","value","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.64e62406.chunk.js","sourcesContent":["import Header from './header'\n\nexport default Header","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport './header.css'\n\nconst Header = () => {\n    return (\n        <div className='header d-flex'>\n            <h3>\n                <Link to='/'>\n                    Star DB\n                </Link>\n            </h3>\n            <ul className='d-flex'>\n                <li>\n                    <Link to='/peoples/'>People</Link>\n                </li>\n                <li>\n                    <Link to='/planets/'>Planets</Link>\n                </li>\n                <li>\n                    <Link to='/starships/'>Starships</Link>\n                </li>\n                <li>\n                    <Link to='/login/'>Login</Link>\n                </li>\n                <li>\n                    <Link to='/secret/'>Secret</Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Header","export default class SwapiServise {\n\n    _apiBase = 'https://swapi.co/api'\n    _imageBase='https://starwars-visualguide.com/assets/img'\n  \n    getResource = async (url) => {\n      const res = await fetch(`${this._apiBase}${url}`)\n  \n      if(!res.ok) {\n        throw new Error(`Could not fetch ${url}, reciwed ${res.status}`)\n      };\n  \n      return await res.json()\n    }\n  \n    getAllPeople = async () => {\n      const res = await this.getResource(`/people/`)\n      return res.results.map(this._transformPerson)\n    }\n  \n    getPerson = async (id) => {\n      const person = await this.getResource(`/people/${id}`)\n      return this._transformPerson(person)\n    }\n  \n    getAllPlanets = async () => {\n      const res = await this.getResource(`/planets/`)\n      return res.results.map(this._transformPlanet)\n    }\n  \n    getPlanet = async (id) => {\n      const planet = await this.getResource(`/planets/${id}`)\n      return this._transformPlanet(planet)\n    }\n  \n    getAllStarships = async () => {\n      const res = await this.getResource(`/starships/`)\n      return res.results.map(this._transformStarship)\n    }\n  \n    getStarship = async (id) => {\n      const starship = await this.getResource(`/starships/${id}`)\n      return this._transformStarship(starship)\n    }\n\n    getPersonImage = ({id}) => {\n      return `${this._imageBase}/characters/${id}.jpg`\n    }\n\n    getPlanetImage = ({id}) => {\n      return `${this._imageBase}/planets/${id}.jpg`\n    }\n\n    getStarshipImage = ({id}) => {\n      return `${this._imageBase}/starships/${id}.jpg`\n    }\n\n    _extractId(item) {\n      const idRegExp = /\\/([0-9]*)\\/$/\n      return item.url.match(idRegExp)[1]\n    }\n\n    _transformPlanet = (planet) => {\n      return {\n        id: this._extractId(planet),\n        name: planet.name,\n        population: planet.population,\n        rotationPeriod: planet.rotation_period,\n        diameter: planet.diameter\n      }\n    }\n\n    _transformStarship = (starship) => {\n      return {\n        id: this._extractId(starship),\n        name: starship.name,\n        model: starship.model,\n        manufacturer: starship.manufacturer,\n        costInCredits: starship.cost_in_credits,\n        length: starship.length,\n        crew: starship.crew,\n        passangers: starship.passangers,\n        cargoCapacity: starship.cargo_capacity\n      }\n    }\n\n    _transformPerson = (person) => {\n      return {\n        id: this._extractId(person),\n        name: person.name,\n        gender: person.gender,\n        birthYear: person.birth_year,\n        eyeColor: person.eye_color\n      }\n    }\n  }","import Loader from './loader'\n\nexport default Loader","import React from 'react'\n\nimport './loader.css'\n\nconst Loader = () => {\n    return (\n        <div className=\"loadingio-spinner-double-ring-cda27y3y6mg\">\n            <div className=\"ldio-p6zfon44i4g\">\n                <div></div>\n                <div></div>\n                <div><div></div></div>\n                <div><div></div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Loader","import React from 'react'\nimport './error-indicator.css'\n\nconst ErrorIndicator = () => {\n    return (\n        <div className='error-indicator'>\n            <span className='boom'>BOOM!</span>\n            <span>\n                Someshing has gone terribly wrong\n            </span>\n            <span>\n                (but we already sent droids to fix it)\n            </span>\n        </div>\n    )\n}\n\nexport default ErrorIndicator","import ErrorIndicatro from './error-indicator'\n\nexport default ErrorIndicatro","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport SwapiServise from '../../services/swapi-service'\nimport Loader from '../loader/index'\nimport ErrorIndicator from '../error-indocator'\n\nimport './random-planet.css'\n\nexport default class RandomPlanet extends Component {\n\n    static defaultProps = {\n        updateInterval: 10000\n    }\n\n    static propTypes = {\n        updateInterval: PropTypes.number\n    }\n\n    SwapiService = new SwapiServise()\n\n    state = {\n        planet: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        const {updateInterval} = this.props\n        this.updatePlanet()\n        this.interval = setInterval(this.updatePlanet, updateInterval)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    onPlanetLoaded = (planet) => {\n        this.setState({\n            planet,\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updatePlanet = () => {\n        const id = Math.floor(Math.random()*25)+3\n        this.SwapiService\n            .getPlanet(id)\n            .then(this.onPlanetLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const {planet, loading, error} = this.state\n        const dataOrError = !error ? <PlanetViev planet={planet}/> : <ErrorIndicator/>\n        const content = !loading ? dataOrError : <Loader/>\n\n        return (\n            <div className='random-planet jumbotron rounded'>\n                {content}\n            </div>\n        )\n    }\n}\n\nconst PlanetViev = ({planet}) => {\n    const {id, name, population, rotationPeriod, diametr} = planet\n    return (\n        <React.Fragment>\n            <img className='planet-image' alt={name} src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}/>\n                <div>\n                    <h4>{name}</h4>\n                    <ul className='list-group list-group-flush'>\n                        <li className='list-group-item'>\n                            <span className='term'>Population</span>\n                            <span>{population}</span>\n                        </li>\n                        <li className='list-group-item'>\n                            <span className='term'>Rotation Period</span>\n                            <span>{rotationPeriod}</span>\n                        </li>\n                        <li className='list-group-item'>\n                            <span className='term'>Diametr</span>\n                            <span>{diametr}</span>\n                        </li>\n                    </ul>\n                </div>\n        </React.Fragment>\n    )\n}","import RandomPlanet from './random-planet'\n\nexport default RandomPlanet","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './item-list.css'\n\nconst ItemList = (props) => {\n    const {data, onItemSelected, children: renderLabel} = props\n\n    const items = data.map((item) => {\n            const { id } = item\n            const label = renderLabel(item)\n            return (\n                <li className='list-group-item' \n                    key={id}\n                    onClick={() => onItemSelected(id)}>\n                    {label}\n                </li>\n            )\n        })\n\n    return (\n        <ul className='item-list list-group'>\n            {items}\n        </ul>\n    )\n}\n\nItemList.defaultProps = {\n    onItemSelected: () => {}\n}\n\nItemList.propTypes = {\n    onItemSelected: PropTypes.func,\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    children: PropTypes.func.isRequired\n}\n\nexport default ItemList","import ItemList from './intem-list'\n\nexport default ItemList","import React, {Component} from 'react'\nimport Loader from '../loader'\nimport ErrorIndicator from '../error-indocator/error-indicator'\n\nconst withData = (View) => {\n    return class extends Component {\n        state = {\n            data: null,\n            loading: true,\n            error: false\n        }\n\n        componentDidMount() {\n            this.setState({\n                loading: true,\n                error: false\n            })\n\n            this.props.getData()\n                .then((data) => {\n                    this.setState({\n                        data,\n                        loading: false\n                    })\n                })\n                .catch(()=> {   \n                    this.setState({error: true, loading: false})\n                })\n        }\n\n        render() {\n            const {data, loading, error} = this.state\n            if (loading) {\n                return <Loader/>\n            }\n\n            if (error) {\n                return <ErrorIndicator/>\n            }\n\n            return <View {...this.props} data={data}/>\n        }\n    }\n}\n\nexport default withData","import React from 'react'\n\n\nconst {\n    Provider: SwapiServiceProvider,\n    Consumer: SwapiServiceConsumer\n} = React.createContext()\n\nexport {\n    SwapiServiceProvider,\n    SwapiServiceConsumer\n}","import React from 'react'\nimport {SwapiServiceConsumer} from '../swapi-service-context'\n\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\n    return (props) => {\n        return (\n            <SwapiServiceConsumer>\n                {\n                    (swapiServise) => {\n                        const serviceProps = mapMethodsToProps(swapiServise)\n                        return (\n                            <Wrapped {...props} {...serviceProps}/>\n                        )\n                    }\n                }\n            </SwapiServiceConsumer>\n        )\n    }\n}\n\nexport default withSwapiService","const compose = (...funcs) => (comp) => {\n    return funcs.reduceRight((prevResult, f) => f(prevResult), comp)\n}\n\nexport default compose","import React from 'react'\n\nconst withChildFunction = (fn) => (Wrapped) => {\n    return (props) => {\n        return (\n            <Wrapped {...props} >\n                {fn}\n            </Wrapped>\n        )\n    }\n}\n\nexport default withChildFunction","import React from 'react'\nimport ItemList from '../item-list'\nimport {withData, withSwapiService, withChildFunction, compose} from '../hoc-helpers' \n\nconst renderName = ({name}) => <span>{name}</span>\nconst mapPersonMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPeople\n    }\n}\nconst mapPlanetMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllPlanets\n    }\n}\nconst mapStarshipMethodsToProps = (swapiService) => {\n    return {\n        getData: swapiService.getAllStarships\n    }\n}\n\nconst PersonList = compose(\n                    withSwapiService(mapPersonMethodsToProps),\n                    withData,\n                    withChildFunction(renderName)\n                )(ItemList)\n\nconst PlanetList = compose(\n                    withSwapiService(mapPlanetMethodsToProps),\n                    withData,\n                    withChildFunction(renderName)\n                )(ItemList)\n\nconst StarshipList = compose(\n                    withSwapiService(mapStarshipMethodsToProps),\n                    withData,\n                    withChildFunction(renderName)\n                )(ItemList)\n\nexport {\n    PersonList,\n    PlanetList,\n    StarshipList\n}","import React, {Component} from 'react'\n\nimport './item-details.css'\nimport Loader from '../loader'\n\nexport default class ItemDetails extends Component {\n\n    state = {\n        item: null,\n        image: null\n    }\n\n    componentDidMount() {\n        this.updateItem()\n    }\n\n    componentDidUpdate(pervProps) {\n        if (this.props.itemId !== pervProps.itemId) {\n            this.updateItem()\n        }\n    }\n\n    updateItem = () => {\n        const { itemId, getData, getImageUrl } = this.props\n        if (!itemId) {\n            return\n        }\n\n        getData(itemId)\n            .then((item) => {\n                this.setState({\n                    item,\n                    image: getImageUrl(item)\n                })\n            })\n    }\n\n    render() {\n        if (!this.state.item) {\n            return (\n                <div className='item-details card'>\n                    <span>Select a item from a list</span>\n                </div>\n            )\n        }\n\n        const {item, image} = this.state\n        const {id, name} = item\n\n        if (id !== this.props.itemId) {\n            return (\n                <div className='item-details card'>\n                    <Loader/>\n                </div>\n            )\n        }\n\n        return (\n            <div className='item-details card'>\n                <img className='item-image' alt={name} src={image}/>\n                <div className='card-body'>\n                    <h4>{name}</h4>\n                    <ul className='list-group list-group-flush'>\n                        {\n                            React.Children.map(this.props.children, (child) => {\n                                return React.cloneElement(child, {item})\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\n\nconst Record = ({item, field, label}) => {\n    return (\n        <li className='list-group-item'>\n            <span className='term'>{label}</span>\n            <span>{item[field]}</span>\n        </li>\n    )\n}\n\nexport default Record","import ItemDetails from './item-details'\nimport Record from './item-record'\n\nexport default ItemDetails\nexport {\n    Record\n}","import React from 'react'\nimport ItemDetals, { Record } from '../item-details'\nimport {withSwapiService} from '../hoc-helpers'\n\nconst PersonDetails = (props) => {\n    return (\n        <ItemDetals {...props}>\n                <Record field='gender' label='Gender'/>\n                <Record field='eyeColor' label='Eye Color'/>\n                <Record field='birthYear' label='Birth Year'/>\n        </ItemDetals>\n    )\n}\n\nconst mapMethodsToProps = (swapiServise) => {\n    return {\n        getData: swapiServise.getPerson,\n        getImageUrl: swapiServise.getPersonImage\n    }\n} \n\nexport default withSwapiService(mapMethodsToProps)(PersonDetails)","import React from 'react'\nimport ItemDetals, { Record } from '../item-details'\nimport {withSwapiService} from '../hoc-helpers'\n\nconst PlanetDetails = (props) => {\n    return (\n        <ItemDetals {...props}>\n                <Record field='population' label='Population'/>\n                <Record field='rotationPeriod' label='Rotete Period'/>\n                <Record field='diameter' label='Diameter'/>\n        </ItemDetals>\n    )\n}\n\nconst mapMethodsToProps = (swapiServise) => {\n    return {\n        getData: swapiServise.getPlanet,\n        getImageUrl: swapiServise.getPlanetImage\n    }\n} \n\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails)","import React from 'react'\nimport ItemDetals, { Record } from '../item-details'\nimport {withSwapiService} from '../hoc-helpers'\n\nconst StarshipDetails = (props) => {\n    return (\n        <ItemDetals {...props}>\n                <Record field='model' label='Model'/>\n                <Record field='length' label='Langth'/>\n                <Record field='costInCredits' label='Cost'/>\n        </ItemDetals>\n    )\n}\n\nconst mapMethodsToProps = (swapiServise) => {\n    return {\n        getData: swapiServise.getStarship,\n        getImageUrl: swapiServise.getStarshipImage\n    }\n} \n\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails)","import Row from './row'\n\nexport default Row","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Row = ({left, right}) => {\n    return (\n        <div className='row mb2'>\n            <div className='col-md-6'>\n                {left}\n            </div>\n            <div className='col-md-6'>\n                {right}\n            </div>\n        </div>\n    )\n}\n\nRow.propTypes = {\n    left: PropTypes.node,\n    right: PropTypes.node\n}\n\nexport default Row","import PeoplePage from './people'\n\nexport default PeoplePage","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {PersonList, PersonDetails} from '../../sw-components'\nimport Row from '../../html/row'\n\nconst PeoplePage = ({history, match}) => {\n\n    const {id} = match.params\n\n    return (\n        <Row \n            left={<PersonList onItemSelected={(id) => history.push(id)}/>} \n            right={<PersonDetails itemId={id}/>} />\n        )\n}\n\nexport default withRouter(PeoplePage)","import StarshipPage from './starships'\n\nexport default StarshipPage","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {StarshipList, StarshipDetails} from '../../sw-components'\nimport Row from '../../html/row'\n\nconst StarshipPage = ({history, match}) => {\n\n    const {id} = match.params\n\n    return (\n        <Row \n            left={<StarshipList onItemSelected={(id) => history.push(id)}/>} \n            right={<StarshipDetails itemId={id}/>}/>\n    )\n}\n\nexport default withRouter(StarshipPage)","import PlanetPage from './planets'\n\nexport default PlanetPage","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {PlanetList, PlanetDetails} from '../../sw-components'\nimport Row from '../../html/row'\n\nconst PlanetPage = ({history, match}) => {\n\n    const {id} = match.params\n\n    return (\n        <Row \n            left={<PlanetList onItemSelected={(id) => history.push(id)}/>} \n            right={<PlanetDetails itemId={id}/>}/>\n    )\n}\n\nexport default withRouter(PlanetPage)","import LoginPage from './login-page'\n\nexport default LoginPage","import React from 'react'\nimport {Redirect} from 'react-router-dom'\n\nconst LoginPage = ({isLoggedIn, onLogin}) => {\n    if (isLoggedIn) {\n        return <Redirect to='/'/>\n    }\n    return (\n        <div className='jumbotron'>\n            <p>Ligin to see secret page!</p>\n            <button \n                className='btn btn-primary'\n                onClick={onLogin}>\n                LogIn\n            </button>\n        </div>\n    )\n}\n\nexport default LoginPage","import SecretPage from './secret-page'\n\nexport default SecretPage","import React from 'react'\nimport {Redirect} from 'react-router-dom'\n\nconst SecretPage = ({isLoggedIn}) => {\n    if(isLoggedIn) {\n        return (\n            <div className='jumbotron text-center'>\n                <h3>This pade is full secret!</h3>\n            </div>\n        )\n    }\n    return <Redirect to='/login/'/>\n}\n\nexport default SecretPage","import Error404 from './error404'\n\nexport default Error404","import React from 'react'\n\nconst Error404 = () => {\n    return (\n        <div className='jumbotron text-center'>\n            <h3>404: page not found</h3>\n        </div>\n    )\n}\n\nexport default Error404","import App from './app'\n\nexport default App","import React, {Component} from 'react'\nimport Header from '../header'\nimport RandomPlanet from '../random-planet'\nimport {PeoplePage, StarshipPage, PlanetPage, LoginPage, SecretPage, Error404} from '../pages'\nimport {SwapiServiceProvider} from '../swapi-service-context'\nimport SwapiService from '../../services/swapi-service'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport './app.css'\n\nexport default class App extends Component {\n\n    swapiService = new SwapiService()\n\n    state = {\n        selectedPerson: null,\n        isLoggedIn: false\n    }\n\n    onLogin = () => {\n        this.setState({\n            isLoggedIn: true\n        })\n    }\n\n    render() {\n        const {isLoggedIn} = this.state\n        return (\n            <div>\n                <SwapiServiceProvider value={this.swapiService}>\n                    <Router>\n                        <Header/>\n                        <RandomPlanet updateInterval={5000}/>\n                        <Switch>\n                            <Route path='/' exact render={() => <h2>Welcome to StarDB</h2>}/>\n                            <Route path='/peoples/:id?' component={PeoplePage}/>\n                            <Route path='/planets/:id?' component={PlanetPage}/>\n                            <Route path='/starships/:id?' component={StarshipPage}/>\n                            <Route path='/login/' render={() => (\n                                <LoginPage\n                                isLoggedIn={isLoggedIn}\n                                onLogin={this.onLogin}/>\n                            )}/>\n                            <Route path='/secret/' render={() => (\n                                <SecretPage isLoggedIn={isLoggedIn}/>\n                            )}/>\n                            <Route component={Error404}/>\n                        </Switch>\n                    </Router>\n                </SwapiServiceProvider>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}